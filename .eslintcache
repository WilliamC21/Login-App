[{"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\index.js":"1","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\App.js":"2","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\Home\\Home.js":"3","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\MainHeader\\MainHeader.js":"4","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\Login\\Login.js":"5","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Card\\Card.js":"7","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Button\\Button.js":"8","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\store\\auth-context.js":"9","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Input\\Input.js":"10"},{"size":286,"mtime":1634763002335,"results":"11","hashOfConfig":"12"},{"size":517,"mtime":1634763068151,"results":"13","hashOfConfig":"12"},{"size":468,"mtime":1634763113648,"results":"14","hashOfConfig":"12"},{"size":307,"mtime":1634761783992,"results":"15","hashOfConfig":"12"},{"size":3932,"mtime":1634767379242,"results":"16","hashOfConfig":"12"},{"size":690,"mtime":1634761942152,"results":"17","hashOfConfig":"12"},{"size":218,"mtime":1616593928000,"results":"18","hashOfConfig":"12"},{"size":353,"mtime":1616593928000,"results":"19","hashOfConfig":"12"},{"size":981,"mtime":1634763242994,"results":"20","hashOfConfig":"12"},{"size":779,"mtime":1634767246506,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9fofgy",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\index.js",[],["44","45"],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\App.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\Home\\Home.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\Login\\Login.js",["46"],"import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authContext = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Checking form validity!\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"CLEANUP\");\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (formIsValid) {\n      authContext.onLogin(emailState.isValid, passwordState.isValid);\n    } else if (!emailIsValid) {\n      emailInputRef.current.focus();\n    } else {\n      passwordInputRef.current.focus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          ref={emailInputRef}\n          id=\"email\"\n          label=\"E-mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n        <Input\n          ref={passwordInputRef}\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\store\\auth-context.js",[],"C:\\Users\\wcrox\\Desktop\\ReactUdemy\\Login\\src\\components\\UI\\Input\\Input.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":7,"column":3,"nodeType":"53","messageId":"54","endLine":7,"endColumn":22},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useImperativeHandle' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]